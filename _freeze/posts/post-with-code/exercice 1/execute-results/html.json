{
  "hash": "1736947a776dc7dd0b0b726001e1562a",
  "result": {
    "markdown": "## Exercice 1\n\nCe premier exercice a pour but de nettoyer une base de données ainsi que d'en extraire les informations principales. Nous avons également appris à utiliser le package geocoder nous permettant d'effectuer des calculs à partir de lieux précis. Ceci nous sera utile pour l'exercice final.\n\n### Question 2\n\n#### Lisez le fichier téléchargé (ou directement depuis le site, cf aide plus bas) avec la fonction read.table. Le résultat sera affecté à l'objet de nom data_ex. Le jeux de données contient 4 colonnes. Quels sont les noms et la nature des colonnes ? Combien de lignes contient la data.frame ?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_ex <- read.csv2(\"C:/Users/mathi/OneDrive/Documents/M1 ECAP/Semestre 2/R avancé et Git/R_avancé/données/paris2024.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames_data<-colnames(data_ex)\n\ntypes_col<-sapply(data_ex, class)\n\nmessage(\"Noms des colonnes : \", paste(colnames_data, collapse = \", \"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nNoms des colonnes : geo_point, nom, sites_olympiques_paralympiques, sports\n```\n:::\n\n```{.r .cell-code}\nmessage(\"Nature des colonnes : \", paste(types_col, collapse = \", \"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nNature des colonnes : character, character, character, character\n```\n:::\n\n```{.r .cell-code}\nmessage(\"Nombre de lignes dans la data.frame : \", nrow(data_ex))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nNombre de lignes dans la data.frame : 31\n```\n:::\n\n```{.r .cell-code}\ndim(data_ex)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 31  4\n```\n:::\n:::\n\n\nIl y a 4 colonnes dans notre jeu de données, elles portent les noms suivants :\n\n\\- geo_point\n\n\\- nom\n\n\\- sites_olympiques\n\n\\- sports\n\nElles sont toutes les 4 de type caractère.\n\nDe plus, notre base contient 31 lignes.\n\n### Question 3\n\n#### Combien y a t'il de sites olympiques ?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnb_sites_olympiques <- sum(data_ex$sites_olympiques_paralympiques == \"Site olympique\", na.rm = TRUE)\n\nnb_sites_olympiques\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 10\n```\n:::\n:::\n\n\nIl y a 10 sites olympiques.\n\n### Question 4\n\n#### Combien y a t'il de sites paralympiques ?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnb_sites_paralympiques <- sum (data_ex$sites_olympiques_paralympiques == \"Site paralympique\", na.rm = TRUE)\n\nnb_sites_paralympiques\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 3\n```\n:::\n:::\n\n\nIl y a 3 sites paralympiques.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnb_sites_olympiques_paralympiques <- sum(data_ex$sites_olympiques_paralympiques == \"Site olympique,Site paralympique\", na.rm = TRUE)\n\nnb_sites_olympiques_paralympiques\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 16\n```\n:::\n:::\n\n\nIl y a 16 sites qui sont olympiques et paralympiques.\n\n### Question 5\n\n#### Quels sont les sites qui accueillent plusieurs disciplines sportives ?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_ex$nb_sports <- strsplit (as.character(data_ex$sports), \",\")\n\nsites_plusieurs_sports <- data_ex[sapply(data_ex$nb_sports, length)>1,]\n\nsites_plusieurs_sports$nom \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"Stade de France\"                                \n [2] \"Vélodrome National de Saint-Quentin-en-Yvelines\"\n [3] \"Stade Roland Garros\"                            \n [4] \"Arena Paris Sud 4 (Porte de Versailles)\"        \n [5] \"Pont d'Iéna\"                                    \n [6] \"Arena Bercy\"                                    \n [7] \"Arena Paris nord\"                               \n [8] \"Arena Paris Sud 6 (Porte de Versailles)\"        \n [9] \"Stade de la Concorde\"                           \n[10] \"Arena Champs de Mars\"                           \n[11] \"La Défense Arena\"                               \n[12] \"Stade nautique\"                                 \n[13] \"Arena Paris Sud 1 (Porte de Versailles)\"        \n[14] \"Stade Tour Eiffel\"                              \n[15] \"Arena La Chapelle\"                              \n[16] \"Centre aquatique\"                               \n[17] \"Château de Versailles\"                          \n[18] \"Grand Palais\"                                   \n[19] \"Invalides\"                                      \n```\n:::\n:::\n\n\nIl y a donc 19 sites qui accueillent plusieurs disciplines sportives.\n\n### Question 6\n\n#### Quelles sont les disciplines para-olympiques accueillies dans ces sites franciliens ?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsites_para <- data_ex[data_ex$sites_olympiques_paralympiques == \"Site paralympique\",]\n\nsites_para$sports \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Para cyclisme sur route\" \"Goalball\"               \n[3] \"Para athlétisme\"        \n```\n:::\n:::\n\n\nLes sites paralympiques accueillent donc 3 disciplines.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsites_para_olym <- data_ex[data_ex$sites_olympiques_paralympiques == \"Site olympique,Site paralympique\",]\n\nsites_para_olym$sports\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"Athlétisme,Para athlétisme,Rugby\"                                \n [2] \"Cyclisme sur piste,Para cyclisme sur piste\"                      \n [3] \"Tennis,Tennis fauteuil,Boxe\"                                     \n [4] \"Tennis de table,Para tennis de table\"                            \n [5] \"Basketball,Basket fauteuil,Gymnastique artistique,trampoline\"    \n [6] \"Boxe,Escrime,Pentathlon moderne,Volley-ball assis\"               \n [7] \"Haltérophilie,Handball,Goalball\"                                 \n [8] \"Judo,Para judo,Lutte,Rugby fauteuil\"                             \n [9] \"Natation,Para natation,Water-polo\"                               \n[10] \"Canoë,Para canoë,Aviron,Para aviron\"                             \n[11] \"Volleyball,Boccia\"                                               \n[12] \"Volleyball de plage,Cécifoot\"                                    \n[13] \"Badminton,Para Badminton,Gymnastique rythmique,Para powerlifting\"\n[14] \"Sports équestres,Para équitation,Pentathlon moderne\"             \n[15] \"Escrime,Escrime fauteuil,Taekwondo,Para taekwondo\"               \n[16] \"Tir à l'arc,Para tir à l'arc,Athlétisme,Cyclisme sur route\"      \n```\n:::\n:::\n\n\nIci, les sites olympiques et paralympiques accueillent différentes disciplines comme :\n\n\\- Tennis fauteil\n\n\\- Para tennis de table\n\n\\- Basket fauteil\n\n\\- Volley-ball assis\n\n\\- Para judo\n\n\\- Rugby fauteil\n\n\\- Para natation\n\n\\- Para canoe\n\n\\- Para aviron\n\n\\- Cécifoot\n\n\\- Para badminton\n\n\\- Para power liftting\n\n\\- Para equitation\n\n\\- Escrime fauteil\n\n\\- Para taekwondo\n\n\\- Para tir à l'arc\n\nNous aurions pu aussi créer un code qui prenait seulement les noms \"para\" et \"fauteil\" pour une utilisation plus optimal. Cependant, les disciplines cécifoot et volley-ball assis auraient surement été oublié.\n\n### Question 7\n\n#### Quel(s) site(s) accueille(nt) le plus de disciplines différentes ?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsites_plusieurs_sports$nb_sports \n```\n:::\n\n\nIci les sites numéro 6, 7, 9, 10, 12, 15, 18 et 19 accueillent au moins 4 disciplines différentes.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsites_plusieurs_sports$nom\n```\n:::\n\n\nCes sites sont respectivement les suivants :\n\n\\- Arena Bercy\n\n\\- Arena Paris nord\n\n\\- Stade de la Concorde\n\n\\- Arena Champs de Mars\n\n\\- Stade nautique\n\n\\- Arena La Chapelle\n\n\\- Grand Palais\n\n\\- Invalides\n\n### Question 8\n\n#### Quelle discipline aura lieu sur le plus grand nombre de sites ? \n\n#### Quels sont ces sites ?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntous_les_sports <- unique(unlist(data_ex$nb_sports))\n\nnb_sites_discipline <- numeric(length = length(tous_les_sports))\n\nfor (i in seq_along(tous_les_sports)) {\n\n  nb_sites_discipline[i] <- sum(sapply(data_ex$nb_sports, function(x) tous_les_sports[i] %in%x))\n\n  \n\n}\n\ndiscipline_max_sites <-tous_les_sports[which.max(nb_sites_discipline)]\n\nsites_discipline_max <-data_ex[sapply(data_ex$nb_sports, function (x) discipline_max_sites %in% x),]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndiscipline_max_sites\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Athlétisme\"\n```\n:::\n\n```{.r .cell-code}\nsites_discipline_max$nom \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Stade de France\"         \"Hôtel de ville de Paris\"\n[3] \"Pont d'Iéna\"             \"Invalides\"              \n```\n:::\n:::\n\n\nLa discipline qui aura lieu sur le plus grand nombre de sites est l'athlétisme. Cette dernière aura lieu au Stade de France, à l'Hotel de ville de Paris, au Pont d'Iéna ainsi qu'aux Invalides.\n\n### Question 9\n\n#### A vol d'oiseau, quels sont les sites les deux sites les plus proches ?\n\nTout d'abord, nous divisons la colonne geo_point en deux colonnes distinctes comprennant les latitudes et longitudes de chaque sites puis nous transformons ces dernières en valeur numérique.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(geosphere)\n\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: le package 'stringr' a été compilé avec la version R 4.3.2\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_coordonnees <- data.frame(do.call('rbind', strsplit(as.character(data_ex$geo_point), ',')))\n\ncolnames(data_coordonnees) <- c(\"latitude\", \"longitude\")\n\ndata_ex <- cbind(data_ex, data_coordonnees)\n\nstr(data_ex)\n\ndata_ex$longitude <- as.numeric(data_ex$longitude)\n\ndata_ex$latitude <- as.numeric(data_ex$latitude)\n```\n:::\n\n\nEnsuite, nous récupérons les données.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncoordonnees <- data_ex[, c(\"latitude\", \"longitude\")]\n```\n:::\n\n\nPuis nous faisons la même chose avec le nom des sites.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnoms_sites <- data_ex$nom\n```\n:::\n\n\nA présent, nous allons initialiser le nom des sites pour retrouver ceux qui sont les plus proches.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsite1 <- NULL\n\nsite2 <- NULL\n\ndistance_min <- Inf\n```\n:::\n\n\nMaintenant, nous créeons une boucle afin de répondre à la question.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfor (i in 1:(nrow(coordonnees) - 1)) {\n\n  for (j in (i + 1):nrow(coordonnees)) {\n\n    #Nettoyons et convertissons les noms des sites en minuscules (sinon beug)\n\n    nom_site_i <- tolower(trimws(noms_sites[i]))\n\n    nom_site_j <- tolower(trimws(noms_sites[j]))\n\n    \n\n    #Calculons la distance entre les sites i et j\n\n    distance <- distHaversine(coordonnees[c(i, j), , drop = FALSE])\n\n    \n\n    cat(\"Distance entre\", nom_site_i, \"et\", nom_site_j, \":\", distance, \"mètres\\n\")\n\n    \n\n    #Mettons à jour les noms des sites les plus proches si la distance est plus petite entre ces couples\n\n    if (distance < distance_min) {\n\n      distance_min <- distance\n\n      site1 <- nom_site_i\n\n      site2 <- nom_site_j\n\n      \n\n      cat(\"Nouvelle paire trouvée :\", site1, \"et\", site2, \"avec distance :\", distance_min, \"mètres\\n\")\n\n    }\n\n  }\n\n}\n```\n:::\n\n\nNous allons à présent afficher nos résultats.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nif (!is.null(site1) && !is.null(site2)) {\n\n  cat(\"Les deux sites les plus proches sont :\", site1, \"et\", site2, \"\\n\")\n\n  cat(\"La distance entre ces deux sites est :\", distance_min, \"mètres\\n\")\n\n} else {\n\n  cat(\"Aucun résultat trouvé. Vérifiez vos données.\\n\")\n\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nLes deux sites les plus proches sont : vélodrome national de saint-quentin-en-yvelines et stade bmx de saint-quentin-en-yvelines \nLa distance entre ces deux sites est : 91.69166 mètres\n```\n:::\n:::\n\n\nLes deux sites les plus proches se trouvent à Saint-Quentin-en-Yvelines et ce sont le Vélodrome National ainsi que le Stade BMX avec une distance de 91,69 mètres.\n\n### Question 10\n\n#### Quels sont les deux sites les plus éloignés ? \n\nNous procédons de la même manière pour trouver les deux sites les plus éloignés.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsite3 <- NULL\n\nsite4 <- NULL\n\ndistance_max <- 0\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfor (x in 1:(nrow(coordonnees) - 1)) {\n\n  for (y in (x + 1):nrow(coordonnees)) {\n\n    #Nettoyons et convertissons les noms des sites en minuscules\n\n    nom_site_x <- tolower(trimws(noms_sites[x]))\n\n    nom_site_y <- tolower(trimws(noms_sites[y]))\n\n    \n\n    #Calculons la distance entre les sites x et y\n\n    distance <- distHaversine(coordonnees[c(x, y), , drop = FALSE])\n\n    \n\n    cat(\"Distance entre\", nom_site_x, \"et\", nom_site_y, \":\", distance, \"mètres\\n\")\n\n    \n\n    #Mettons à jour les noms des sites les plus éloignés si la distance est plus grande\n\n    if (distance > distance_max) {\n\n      distance_max <- distance\n\n      site3 <- nom_site_x\n\n      site4 <- nom_site_y\n\n      \n\n      cat(\"Nouvelle paire trouvée :\", site3, \"et\", site4, \"avec distance :\", distance_max, \"mètres\\n\")\n\n    }\n\n  }\n\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nif (!is.null(site3) && !is.null(site4)) {\n\n  cat(\"Les deux sites les plus éloignés sont :\", site3, \"et\", site4, \"\\n\")\n\n  cat(\"La distance entre ces deux sites est :\", distance_max, \"mètres\\n\")\n\n} else {\n\n  cat(\"Aucun résultat trouvé. Vérifiez vos données.\\n\")\n\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nLes deux sites les plus éloignés sont : stade nautique et colline d'elancourt \nLa distance entre ces deux sites est : 74882.55 mètres\n```\n:::\n:::\n\n\nIci, les deux sites les plus éloignés sont le Stade Nautique et la Colline d'Elancourt avec une distance de 74882 mètres soit 74km.\n\n### Question 11  \n\n#### Vous êtes un heureux millionaire et souhaitez investir dans un bien immobilier.Vous décidez d'acheter un appartement situé au barycentre de l'ensemble des sites olympiques. Où se situe cet appartement ?  \n\nNous allons tout d'abord calculer la moyenne des latitudes et longitudes afin de trouver le barycentre.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlatitude_bary <- mean(coordonnees$latitude)\n\nlongitude_bary <- mean(coordonnees$longitude)\n```\n:::\n\n\nA présent, nous affichons ces valeurs.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncat(\"Latitude du barycentre :\", latitude_bary, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nLatitude du barycentre : 48.86684 \n```\n:::\n\n```{.r .cell-code}\ncat(\"Longitude du barycentre :\", longitude_bary, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nLongitude du barycentre : 2.29757 \n```\n:::\n:::\n\n\nLa latitude du barycentre est de 48,86684 et la longitude de 2,29757.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlatitude <- 48.858844\n\nlongitude <- 2.294350\n```\n:::\n\n\nEn faisant des recherches internet, ceci se trouve Place du Trocadéro et du 11 novembre, proche du Palais de Chaillot.\n\nEn effet, il fallait télécharger une clé google maps or je n'ai pas réussi à faire cela.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}